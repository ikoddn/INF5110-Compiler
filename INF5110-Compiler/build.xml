<!DOCTYPE project>
<!-- Build file for INF5110/INF9110 Obligatory exercise -->
<project name="INF5110/INF9110 Obligatory exercise" default="menu" basedir=".">
	<target name="menu">
		<echo>Targets</echo>
		<echo>clean                     - Cleans up the project</echo>
		<echo>build                     - Build compiler</echo>
		<echo>build-alt                 - Build compiler with unambiguous grammar</echo>
		<echo>build-test                - Build semantics testing classes</echo>
		<echo>test                      - Run semantics tests</echo>
		<echo>compile-runme             - Compile 'code-examples/RunMe.cmp'</echo>
		<echo>list-runme                - Bytecode listing for RunMe</echo>
		<echo>run-runme                 - Execute RunMe</echo>
	</target>

	<!-- Path definitions -->
	<path id="path-cup">
		<pathelement location="./lib/java-cup-11a.jar" />
		<pathelement location="./lib/jflex-1.6.0.jar" />
	</path>

	<path id="path-run">
		<path refid="path-cup" />
		<pathelement location="build/classes" />
	</path>

	<!-- Task definitions -->
	<taskdef classname="jflex.anttask.JFlexTask" name="jflex" classpathref="path-cup" />
	<taskdef classname="java_cup.anttask.CUPTask" name="cup" classpathref="path-cup" />

	<!-- Target definitions -->
	<target name="init">
		<!-- Directories and files that exist. -->
		<property name="dir.base" value="${basedir}" />
		<property name="dir.build" value="${dir.base}/build" />
		<property name="dir.src" value="${dir.base}/src" />
		<property name="dir.src-gen" value="${dir.base}/src-gen" />
		<property name="dir.test" value="${dir.base}/test" />
		<property name="dir.test-gen" value="${dir.base}/test-gen" />

		<!-- Directories and files to be created. -->
		<property name="dir.classes" value="${dir.build}/classes" />
		<property name="dir.testclasses" value="${dir.build}/testclasses" />
	</target>

	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${dir.build}" includes="**/*" />
		</delete>
		<delete includeemptydirs="true">
			<fileset dir="${dir.src-gen}" includes="**/*" />
		</delete>
	</target>

	<target name="mkdir" depends="init">
		<mkdir dir="${dir.classes}" />
	</target>

	<!-- Generate scanner and parser using JFlex and CUP  -->
	<target name="generate" depends="mkdir">
		<jflex file="./grammars/oblig1.lex" destdir="src-gen" />
		<cup srcfile="./grammars/oblig1.cup" destdir="src-gen" interface="true" />
	</target>

	<target name="generate-alt" depends="mkdir">
		<jflex file="./grammars/oblig1.lex" destdir="src-gen" />
		<cup srcfile="./grammars/oblig1-unambiguous.cup" destdir="src-gen" interface="true" />
	</target>

	<!-- Compile Java files and store in /build/classes directory -->
	<target name="build" depends="generate">
		<javac includeantruntime="false" srcdir="${dir.src}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src-gen}" />
		<javac includeantruntime="false" srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src}" />
	</target>

	<target name="build-alt" depends="generate-alt">
		<javac includeantruntime="false" srcdir="${dir.src}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src-gen}" />
		<javac includeantruntime="false" srcdir="${dir.src-gen}" destdir="${dir.classes}" debug="true" includes="**/*.java" classpathref="path-cup" sourcepath="${dir.src}" />
	</target>

	<!-- Build test classes -->
	<target name="build-test" depends="mkdir">
		<javac includeantruntime="false" srcdir="${dir.src}" destdir="${dir.classes}" debug="true" includes="test/*.java" classpathref="path-cup" />
	</target>

	<!-- Run tests -->
	<target name="test" depends="build-test">
		<java classname="test.Tester" classpathref="path-run">
			<arg value="tests" />
		</java>
	</target>

	<!-- Run compiler on example RunMe -->
	<target name="compile-runme" depends="init">
		<java classname="compiler.Compiler" classpathref="path-run">
			<arg value="code-examples/RunMe.cmp" />
			<arg value="code-examples/RunMe.ast" />
			<arg value="code-examples/RunMe.bin" />
		</java>
	</target>

	<!-- List example RunMe -->
	<target name="list-runme" depends="init">
		<java classname="runtime.VirtualMachine" classpathref="path-run">
			<arg value="-l" />
			<arg value="code-examples/RunMe.bin" />
		</java>
	</target>

	<!-- Run vm on example RunMe -->
	<target name="run-runme" depends="init">
		<java classname="runtime.VirtualMachine" classpathref="path-run">
			<arg value="code-examples/RunMe.bin" />
		</java>
	</target>

	<!-- Parser testing -->
	<path id="path-run-parsertests">
		<path refid="path-cup" />
		<pathelement location="build/testclasses" />
	</path>

	<path id="path-junit">
		<path refid="path-run" />
		<path refid="path-run-parsertests" />
		<pathelement location="./lib/junit-4.12.jar" />
		<pathelement location="./lib/hamcrest-core-1.3.jar" />
	</path>

	<target name="mkdir-test-parser" depends="init">
		<mkdir dir="${dir.testclasses}" />
	</target>

	<target name="build-test-parser" depends="mkdir-test-parser">
		<!-- Compile test parser generator -->
		<javac includeantruntime="false" srcdir="${dir.test}/tools" destdir="${dir.testclasses}" debug="true" includes="**/*.java" classpathref="path-cup" />

		<!-- Run test parser generator -->
		<java classname="tools.ParserGenerator" classpathref="path-run-parsertests" />

		<!-- Compile parser tests -->
		<javac includeantruntime="false" srcdir="${dir.test}" destdir="${dir.testclasses}" debug="true" includes="**/*.java" classpathref="path-junit" sourcepath="${dir.test-gen}" />
	</target>

	<target name="test-parser" depends="build-test-parser">
		<junit outputtoformatters="true">
			<classpath>
				<path refid="path-junit" />
			</classpath>
			<batchtest>
				<fileset dir="${dir.test}">
					<include name="**/*Test*" />
				</fileset>
			</batchtest>
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
</project>
