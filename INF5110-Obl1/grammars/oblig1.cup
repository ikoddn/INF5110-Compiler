package oblig1parser;
import java_cup.runtime.*;
import syntaxtree.*;
import java.util.*;

parser code {:

:};

/* Terminals */
terminal                        PROGRAM, CLASS;
terminal                        LBRACK, RBRACK;
terminal                        LPAR, RPAR;
terminal						COLON;
terminal                        SEMI, RETURN;
terminal                        PROCEDURE;
terminal						VARIABLE;
terminal String                 ID;
terminal String                 STRING_LITERAL;

/* Non terminals */
non terminal Program			program;
non terminal List<Decl>			decl_list;
non terminal Decl				decl;
non terminal ClassDecl			class_decl;
non terminal VarDecl			var_decl;
non terminal List<VarDecl>		var_decl_list;


/* The grammar */
program         ::= PROGRAM LBRACK decl_list:dl RBRACK				{: RESULT = new Program(dl); :};

decl_list       ::= decl:d											{: List<Decl> l = new LinkedList<Decl>();
																	   l.add(d);
																	   RESULT = l; :} 
                |   decl_list:dl decl:d 							{: dl.add(d);
																	   RESULT = dl; :};

decl            ::= class_decl:sd									{: RESULT = sd; :};
                                  
class_decl      ::= CLASS ID:name LBRACK var_decl_list:vl RBRACK	{: RESULT = new ClassDecl(name, vl); :};

var_decl_list	::= var_decl:vd var_decl_list:vl					{: List<VarDecl> l = new LinkedList<VarDecl>();
																	   l.add(vd);
																	   RESULT = l; :}
				|   ; //empty										
				
var_decl		::= VARIABLE ID:name COLON ID:type SEMI				{: RESULT = new VarDecl(name, type); :};
